{"version":3,"file":"main.4d71803a1e95155fbb8f.hot-update.js","sources":["webpack:///./src/components/Navbar.jsx","webpack:///./src/stories/navbar.stories.jsx"],"sourcesContent":["import React from \"react\";\n\n/*\n- The number of navigation links\n- the orientation of the links (vertical, horizontal)\n- slide through the links or scroll in the event of too many links not being able to\n  fit in the navbar\n*/\n\nexport const Navbar = (children, numOfNavLinks, orientation, isScroll, isSlider, styles) =>{    \n    const style = {\n        display: 'flex',\n        flexDirection: orientation == 'row' ? 'row' : 'column'\n    }\n    const navLinks = Array.from({length: numOfNavLinks}, (_, index) => {\n        const linkText = `Link number ${index}` \n        return <a>{linkText}</a>\n    });\n\n    return(\n        <>\n            Navbar\n           <nav>\n                {navLinks}\n            </nav> \n        </>\n    )\n}","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import {Navbar} from '../components/Navbar.jsx';\\n\\n// setup stories for component\\nexport default {\\n    title: 'Navbar',\\n    component: Navbar,\\n}\\n\\n//export const test = () => <Navbar/>\\n\\n// create story  \\nexport function Test(args){\\n    return(<Navbar {...args}/>)\\n}\\n// list the props of the component that can be controlled by storyboard\\n// list component's props and give it a dummy value, the value can be changed in storyboard\\n// for testing\\nTest.args = {\\n    numOfNavLinks: 3,\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Test\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":1,\"line\":14},\"startBody\":{\"col\":7,\"line\":12},\"endBody\":{\"col\":1,\"line\":14}}};\n    \nimport {Navbar} from '../components/Navbar.jsx';\n\n// setup stories for component\nexport default {\n    title: 'Navbar',\n    component: Navbar,\n}\n\n//export const test = () => <Navbar/>\n\n// create story  \nexport const Test = function Test(args){\n    return(<Navbar {...args}/>)\n};// list the props of the component that can be controlled by storyboard\n// list component's props and give it a dummy value, the value can be changed in storyboard\n// for testing\nTest.args = {\n    numOfNavLinks: 3,\n}\n\n\n\nTest.parameters = { storySource: { source: \"function Test(args){\\n    return(<Navbar {...args}/>)\\n}\" }, ...Test.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}